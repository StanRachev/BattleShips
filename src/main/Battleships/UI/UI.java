package UI;

import game.GameManager;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class UI {

    private GameManager gameManager;
    private static BufferedReader reader;

    public UI() {
        gameManager = new GameManager();
        reader = new BufferedReader(new InputStreamReader(System.in));
    }

    private void screenSleep(int sleep) {
        try {
            Thread.sleep(sleep);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    public void intro() {

        System.out.println("\nWelcome to BattleShips\n\n");
        screenSleep(2000);
    }

    public void chooseGameMode() {

        System.out.println("-> to play PVP, press 1");
        System.out.println("-> To play against AI, press 2");
        System.out.print("\n== Currently PVP is unavailable ==\n\n");

        int userInput;
        boolean isNumber = false;
        while (!isNumber) {

            System.out.print("Please enter mode: ");
            userInput = getChoice(2);

            if ((userInput == 2)) {
                isNumber = true;
            }
        }
    }

    public boolean placeYourShips() {

        System.out.println("\n\n-> to place ships, press 1");
        System.out.println("-> to use autogenerated ships, press 2\n\n");
        System.out.print("Please enter your choice: ");
        return getChoice(2) == 1;
    }

    public static int getChoice(int maxChoice) {
        int choice = 0;
        while (true) {
            try {
                choice = Integer.parseInt(reader.readLine());
                if (choice >= 1 && choice <= maxChoice) {
                    break;
                } else if (choice == -1) {
                    return -1;
                }else {
                    System.out.println("Choose 1 - " + maxChoice);
                    System.out.print("-> ");
                }
            } catch (NumberFormatException | IOException e) {
                System.out.println("Use numbers 1 - " + maxChoice);
                System.out.print("-> ");
            }
        }
        return choice;
    }
}